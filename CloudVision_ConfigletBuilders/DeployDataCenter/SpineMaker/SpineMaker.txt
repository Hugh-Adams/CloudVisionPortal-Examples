{"data":{"configletBuilder":[{"isAssigned":false,"formList":[{"fieldId":"spine_number","fieldLabel":"SpineNumber","type":"Drop down","value":"1,2,3,4","depends":"","validation":{"mandatory":true},"dataValidation":"","helpText":"Enter the number of the spine switch","configletBuilderId":"configletBuilderMapper_665_283387622192162","orderId":0,"key":"fieldId_663_283387572058748","dataValidationErrorExist":false,"previewValue":""}],"name":"Spinemaker","type":"Builder","main_script":{"data":"'''Script to calculate an ip address for a spine'''\n\nimport jsonrpclib\nfrom cvplibrary import Form\nfrom cvplibrary import CVPGlobalVariables, GlobalVariableNames\n\nMAXINTS = 6\nBASENETWORK = '10.30.'\nASN = 65000\n\ndef buildmgmt():\n\n  # To Test\n  #CVPGlobalVariables.setNetElement( '2c:c2:60:0b:c8:21' )\n\n  ztp = CVPGlobalVariables.getValue(GlobalVariableNames.ZTP_STATE)\n  ip = CVPGlobalVariables.getValue(GlobalVariableNames.CVP_IP)\n\n  if ztp == 'true':\n    username = CVPGlobalVariables.getValue(GlobalVariableNames.ZTP_USERNAME)\n    password = CVPGlobalVariables.getValue(GlobalVariableNames.ZTP_PASSWORD)\n  else:\n    username = CVPGlobalVariables.getValue(GlobalVariableNames.CVP_USERNAME)\n    password = CVPGlobalVariables.getValue(GlobalVariableNames.CVP_PASSWORD)\n\n  url = 'https:\/\/%s:%s@%s\/command-api' % (username, password, ip)\n  ss = jsonrpclib.Server(url)\n\n  intfs = ss.runCmds(1, ['enable', { 'cmd': 'show interfaces Management1' } ] )[1]\n  mgmtip = intfs['interfaces']['Management1']['interfaceAddress'][0]['primaryIp']['address']\n  mgmtMask = intfs['interfaces']['Management1']['interfaceAddress'][0]['primaryIp']['maskLen']\n\n  print \"interface Management 1\"\n  print \"vrf forwarding mgmt\"\n  print \"ip address %s\/%s\" % (mgmtip, mgmtMask)\n  print \"!\"\n  \ndef makeintfips(spine):\n  last_octet = 0\n  for int in range(1, (MAXINTS + 1)):\n    intip = '%s%s.%s' % ( BASENETWORK, str(spine), str(last_octet))\n    print 'interface Ethernet%s' % str(int)\n    print 'no switchport'\n    print 'ip address %s\/31' % ( intip )\n    print '!'\n    last_octet += 2\n    \ndef makebgppeers(spine):\n  last_octet = 1\n  incr = 0\n  print 'router bgp %s' % str(ASN)\n  for peer in range(1, (MAXINTS + 1)):\n    peerip = '%s%s.%s' % (BASENETWORK, str(spine), str(last_octet))\n    if peer % 2 != 0:\n      incr += 1\n    print 'neighbor %s remote-as %s' % (peerip, str(ASN + incr))\n    last_octet += 2\n    \n\ndef main():\n  spine = Form.getFieldById('spine_number').getValue()\n  print \"hostname spine-%s\" % str(spine)\n  print \"!\"\n  makeintfips(spine)\n  makebgppeers(spine)\n  buildmgmt()\n\nif __name__ == \"__main__\":\n   main()","key":null}}],"configlet":[]}}